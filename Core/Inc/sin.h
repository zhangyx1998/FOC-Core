#ifndef __SIN_H
#define __SIN_H
#include <stdint.h>
uint8_t u8_sin(uint8_t x)
{
    // Look Up Table
    static const uint8_t LUT[64] = {0x80, 0x83, 0x86, 0x89, 0x8c, 0x8f, 0x92, 0x95, 0x98, 0x9c, 0x9f, 0xa2, 0xa5, 0xa8, 0xab, 0xae, 0xb0, 0xb3, 0xb6, 0xb9, 0xbc, 0xbf, 0xc1, 0xc4, 0xc7, 0xc9, 0xcc, 0xce, 0xd1, 0xd3, 0xd5, 0xd8, 0xda, 0xdc, 0xde, 0xe0, 0xe2, 0xe4, 0xe6, 0xe8, 0xea, 0xec, 0xed, 0xef, 0xf0, 0xf2, 0xf3, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfc, 0xfd, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff};
    // switch according to sign bits
    switch (x >> 6) {
        // 0 ~ 63 | Original output
        case 0b00:
            return LUT[x];
        // 64 ~ 127 | Flip x
        case 0b01:
            return LUT[127 - x];
        // 128 ~ 191 | Flip y
        case 0b10:
            return 0xff - LUT[x - 128];
        // 192 ~ 255 | Flip x and y
        case 0b11:
            return 0xff - LUT[255 - x];
    }
}
#endif